body {
  font-family: $mainFont;
  font-weight: normal;
  // @include rem(font-size, $mainFontSizeMobile);
  line-height: $lineHeight;
  color: $mainTextColor;
  @media (min-width: 768px){
    @include rem(font-size, $mainFontSize);
  }
}

p {
  margin: $mainMargin;
}

ul,ol {
  margin: $mainMargin;
  padding: 0;
  li {
    margin: $listItemMargin;
    padding: 0;
    &:last-child{
      margin-bottom: 0;
    }
  }
}




#{headings($from:1, $to:6)}, .h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: $headingFont;
  line-height: $headingLineHeight;
  font-weight: 400;
  margin: 0 0 16px;
  b, strong {
    font-weight: $font-weight-bold;
  }

  &.mb0 {
    margin-bottom: 0;
  }

  &.is-style-bold {
    // font-family: 'FuturaStdBold';
    font-weight: $font-weight-bold;
  }

  &.is-style-medium {
    // font-family: 'FuturaStdMedium';
    font-weight: $font-weight-medium;
  }

  &.is-style-light {
    // font-family: 'FuturaStdLight';
    font-weight: $font-weight-normal;
  }

  @media (min-width: 768px){
    margin: 0 0 24px;
  }
}

h1, .h1 {
  @if $headingH1Font != 'null' {
    font-family: $headingH1Font;
  }
  @include rem(font-size, $headingH1FontSize);
  @if $headingH1LineHeight != 'null' {
    line-height: $headingH1LineHeight;
  }
  @media (min-width: 768px){
    letter-spacing: -0.0178em;
  }
  @media (max-width: 767px){
    @if $headingH1FontSizeM != 'null' {
      @include rem(font-size, $headingH1FontSizeM);
    }
    @if $headingH1LineHeightM != 'null' {
      line-height: $headingH1LineHeightM;
    }
  }
}

h2, .h2 {
  @if $headingH2Font != 'null' {
    font-family: $headingH2Font;
  }
  @include rem(font-size, $headingH2FontSize);
  @if $headingH2LineHeight != 'null' {
    line-height: $headingH2LineHeight;
  }
  @media (min-width: 768px){
    letter-spacing: 0.03em;
  }
  @media (max-width: 767px){
    @if $headingH2FontSizeM != 'null' {
      @include rem(font-size, $headingH2FontSizeM);
    }
    @if $headingH2LineHeightM != 'null' {
      line-height: $headingH2LineHeightM;
    }
  }
}

h3, .h3 {
  @if $headingH3Font != 'null' {
    font-family: $headingH3Font;
  }
  @include rem(font-size, $headingH3FontSize);
  @if $headingH3LineHeight != 'null' {
    line-height: $headingH3LineHeight;
  }
  @media (min-width: 768px){
    letter-spacing: -0.0016em;
  }
  @media (max-width: 767px){
    @if $headingH3FontSizeM != 'null' {
      @include rem(font-size, $headingH3FontSizeM);
    }
    @if $headingH3LineHeightM != 'null' {
      line-height: $headingH3LineHeightM;
    }
  }
}

h4, .h4 {
  @if $headingH4Font != 'null' {
    font-family: $headingH4Font;
  }
  @include rem(font-size, $headingH4FontSize);
  @if $headingH4LineHeight != 'null' {
    line-height: $headingH4LineHeight;
  }
  @media (min-width: 768px){
    letter-spacing: -0.0016em;
  }
  @media (max-width: 767px){
    @if $headingH4FontSizeM != 'null' {
      @include rem(font-size, $headingH4FontSizeM);
    }
    @if $headingH4LineHeightM != 'null' {
      line-height: $headingH4LineHeightM;
    }
  }
}

h5, .h5 {
  @if $headingH5Font != 'null' {
    font-family: $headingH5Font;
  }
  @include rem(font-size, $headingH5FontSize);
  @if $headingH5LineHeight != 'null' {
    line-height: $headingH5LineHeight;
  }
  @media (min-width: 768px){
    letter-spacing: -0.0016em;
  }
  @media (max-width: 767px){
    @if $headingH5FontSizeM != 'null' {
      @include rem(font-size, $headingH5FontSizeM);
    }
    @if $headingH5LineHeightM != 'null' {
      line-height: $headingH5LineHeightM;
    }
  }
  @media print {
    font-size: 20px;
  }
}

h6, .h6 {
  @if $headingH6Font != 'null' {
    font-family: $headingH6Font;
  }
  @include rem(font-size, $headingH6FontSize);
  @if $headingH6LineHeight != 'null' {
    line-height: $headingH6LineHeight;
  }
  @media (min-width: 768px){
    letter-spacing: -0.0016em;
  }
  @media (max-width: 767px){
    @if $headingH6FontSizeM != 'null' {
      @include rem(font-size, $headingH6FontSizeM);
    }
    @if $headingH6LineHeightM != 'null' {
      line-height: $headingH6LineHeightM;
    }
  }
}

a {
  color: $linkColor;
  text-decoration: underline;
  transition: all .25s ease-out;
  cursor: pointer;
  &:hover {
    text-decoration: none;
    color: $linkColorHover;
  }
  &.no-underline:hover {
    color: $linkColor;
    // text-decoration: underline;
  }
  &[onclick*="print"]{
    @media print {
      display: none;
    }
  }
}

.no-underline {
  text-decoration: none;
}

@media (min-width: 992px){
  .nowrap {
    white-space: nowrap;
  }
}

small {
  font-size: 12.8px;
  line-height: 16px;
  letter-spacing: -0.09px;
}

.text-capitalize {
  text-transform: capitalize;
}